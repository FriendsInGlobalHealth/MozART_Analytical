###SCRIPT FOR COMBINING Patient Tables from all Access Databases into one large table, then also taking a distinct count of NID column.
##if NIDs do not repeat, then R displays # of rows in dataframe in global environment (top right window of R)


#clear R
rm(list = ls())
#Load ODBC package for MS Access Files
#make sure Rstudio is in 32-bit by going to tools->global options
library(RODBC)
library(dplyr)


#parent folder should be where every database needed is stored
Parent.Folder <- "C:/Users/ovu4/Desktop/mozdb"

#creation of list of databases/inputs
list_filenames <- list.files(Parent.Folder, full.names = TRUE, recursive = FALSE)
acc_files <- list_filenames[grep(".mdb", list_filenames)]

output <- lapply(acc_files, 
                 function(file) {
                   channel <- odbcConnectAccess(file)                       
                   data <- sqlQuery(channel, "select * from t_hdd")
                   close(channel)
                   return(data) 
                 })
#combine using bind rows to append parts of output
healthfacilities1 <- bind_rows(output)

#counts of unique healthfacility names in dataframe -> environment will display # of rows
healthfacility.counts <- distinct(healthfacilities1, designacao)

#repeat process for patient table

output_patients <- lapply(acc_files, 
                          function(file) {
                            channel <- odbcConnectAccess(file)                       
                            data <- sqlQuery(channel, "select nid from t_paciente")
                            close(channel)
                            return(data) 
                          })

nid_collector <- data.frame()

for (n in acc_files){
  channel <- odbcConnectAccess(n)
  data <- sqlQuery(channel, "select nid from t_paciente")
  #data <- as.character(data)
  nid_collector <- rbind(nid_collector, data)
  
}


#counts of unique healthfacility names in dataframe -> environment will display # of rows
patient.counts <- distinct(nid_collector, nid)

